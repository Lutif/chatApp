{"version":3,"sources":["components/Join.jsx","components/Chat.jsx","index.js","app.jsx"],"names":["Join","useState","username","room","setData","handleChange","event","target","name","value","prevData","console","log","className","type","placeholder","onChange","onClick","preventDefault","to","socket","endPoint","Chat","location","message","setMessage","messages","setMessages","useEffect","queryString","parse","search","io","emit","error","off","on","map","key","user","text","onKeyPress","sendMessage","root","document","getElementById","ReactDOM","render","path","exact","component"],"mappings":"qQAQe,SAASA,IAAQ,IAAD,EACMC,mBAAS,CAAEC,SAAS,GAAGC,KAAK,KADlC,0BACrBD,EADqB,EACrBA,SAAUC,EADW,EACXA,KAAMC,EADK,KAG3B,SAASC,EAAaC,GAAQ,IAAD,EACLA,EAAMC,OAArBC,EADoB,EACpBA,KAAMC,EADc,EACdA,MACXL,GAAQ,SAAAM,GAAQ,sBAASA,EAAT,eAAoBF,EAAOC,OAC3CE,QAAQC,IAAR,iBAAsBV,EAAtB,iBAAuCC,IAO3C,OACI,yBACIU,UAAU,iBACV,+CACA,2BAAOC,KAAK,OAAON,KAAK,WAAWO,YAAY,kBAAkBC,SAAUX,IAC3E,2BAAOS,KAAK,OAAON,KAAK,OAAOO,YAAY,kBAAkBC,SAAUX,IAEvE,kBAAC,IAAD,CAAMY,QAXd,SAA2BX,GACvB,OAASJ,GAAaC,EAA8B,KAAvBG,EAAMY,kBAUGC,GAAE,qBAAgBjB,EAAhB,iBAAiCC,IAEjE,4BAAQW,KAAK,UAAb,oB,IC1BZM,E,0CACEC,EAAW,iBAEF,SAASC,EAAT,GAA2B,IAAZC,EAAW,EAAXA,SAAW,EACTtB,mBAAS,CAAEO,KAAK,GAAIL,KAAK,KADhB,+BAC/BK,KAD+B,EACzBL,KADyB,KAETF,mBAAS,KAFA,mBAEhCuB,EAFgC,KAEvBC,EAFuB,OAGPxB,mBAAS,IAHF,mBAGhCyB,EAHgC,KAGtBC,EAHsB,KAwCjC,OAjCJC,qBAAU,WAAO,IAAD,EACWC,IAAYC,MAAMP,EAASQ,QAA1CvB,EADI,EACJA,KAAML,EADF,EACEA,KAOd,OANAQ,QAAQC,IAAIW,IACZH,EAASY,IAAGX,IACLY,KAAK,OAAQ,CAAEzB,OAAML,SAAQ,SAAC+B,GAAD,OAChCvB,QAAQC,IAAIsB,MAGT,WACHd,EAAOa,KAAK,cACZb,EAAOe,MACPxB,QAAQC,IAAI,oBAEjB,CAACW,EAASQ,OAAQV,IAKrBO,qBAAU,WACNR,EAAOgB,GAAG,WAAW,SAACZ,GAClBG,EAAY,GAAD,mBAAKD,GAAL,CAAeF,UAG/B,CAACE,IAWI,yBAAKb,UAAU,iBACX,6BACI,uCACCa,EAASW,KAAI,SAACb,GAAD,OAAY,uBAAGc,IAAKd,EAAQe,KAAKf,EAAQgB,MAAOhB,EAAQe,KAA5C,MAAqDf,EAAQgB,UAE3F,2BAAO1B,KAAK,OACRL,MAAOe,EACPR,SAAU,SAACV,GAAD,OAAWmB,EAAWnB,EAAMC,OAAOE,QAC7CgC,WAAY,SAACnC,GAAD,MAAyB,UAAdA,EAAMgC,IAjB7C,SAAqBhC,GACjBA,EAAMY,iBAENE,EAAOa,KAAK,cAAeT,GAAS,WAAgBC,EAAW,OAcJiB,CAAYpC,GAAS,SCpDxF,IAAMqC,EAAOC,SAASC,eAAe,QAErCC,IAASC,OAAO,mBCDD,WACX,OACG,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAQC,KAAK,IAAIC,OAAK,EAACC,UAAWlD,IAClC,kBAAC,IAAD,CAAOgD,KAAK,QAAQE,UAAW5B,ODHvB,MAAOqB,K","file":"static/js/main.4d40cbd5.chunk.js","sourcesContent":["import React ,{ useState}from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './styles.css'\r\n//material ui design\r\n\r\n\r\n\r\n\r\nexport default function Join() {\r\n    let [{username, room},setData] = useState({ username:'',room:'' });\r\n    \r\n    function handleChange(event) {\r\n        let {name, value} = event.target \r\n        setData(prevData => ({...prevData, [name]: value}))\r\n        console.log(`name : ${username} room:${room}`)\r\n         \r\n    }\r\n    function preventEmptyClick(event) {\r\n        return (!username || !room)? event.preventDefault():null\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className=\"joinContainer\">\r\n            <h1>Welcome to Chat</h1>\r\n            <input type=\"text\" name='username' placeholder='Enter your name' onChange={handleChange}/>\r\n            <input type=\"text\" name='room' placeholder='Enter room name' onChange={handleChange}/>\r\n            \r\n            <Link onClick={preventEmptyClick} to={`/chat?name=${username}&room=${room}`}>\r\n            \r\n                <button type='submit'  >Enter the room</button>\r\n        </Link>\r\n        </div>\r\n        \r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport queryString from 'query-string';\r\nimport io from 'socket.io-client';\r\n\r\nlet socket;\r\nconst endPoint = 'localhost:5000';\r\n\r\nexport default function Chat({location}) {\r\n    let [{name, room},setData]= useState({ name:'', room:'' });\r\n    let [message, setMessage] = useState('');\r\n    let [messages, setMessages] = useState([]);\r\n    \r\n\r\n    //handling join \r\n    useEffect(() => {\r\n        const { name, room } = queryString.parse(location.search)\r\n        console.log(location);\r\n        socket = io(endPoint);\r\n        socket.emit('Join', { name, room }, (error) =>\r\n            console.log(error)\r\n        );\r\n\r\n        return () => { //handling cleaning.. executed at unmount\r\n            socket.emit('disconnect');\r\n            socket.off();\r\n            console.log('cleaning done')\r\n        }\r\n    }, [location.search, endPoint]);\r\n        \r\n\r\n//for reviving messages\r\n    \r\n    useEffect(() => {\r\n        socket.on('message', (message) => {\r\n            setMessages([...messages, message]);\r\n\r\n        })\r\n    }, [messages]);\r\n\r\n    function sendMessage(event) {\r\n        event.preventDefault()\r\n\r\n        socket.emit('sendMessage', message, () => {         setMessage('');\r\n    });\r\n    \r\n    }\r\n\r\n        return (\r\n            <div className=\"chatContainer\">\r\n                <div >\r\n                    <p>messages</p>\r\n                    {messages.map((message)=> <p key={message.user+message.text}>{message.user}:  {message.text}</p>)}\r\n                </div>\r\n                <input type=\"text\"\r\n                    value={message}\r\n                    onChange={(event) => setMessage(event.target.value)}\r\n                    onKeyPress={(event) => event.key === \"Enter\" ? sendMessage(event) : null} />\r\n                    {/* <button onClick={sendMessafe}>Send</button> */}\r\n                </div>\r\n    )}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './app';\r\n\r\nconst root = document.getElementById('root');\r\n\r\nReactDOM.render(<App/>,root) ","import React from 'react';\r\n\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport Join from './components/Join';\r\nimport Chat from './components/Chat';\r\nexport default function App() {\r\n    return (\r\n       <Router>\r\n        <Route  path='/' exact component={Join} />\r\n        <Route path=\"/chat\" component={Chat} />\r\n        </Router> \r\n     \r\n    )\r\n}"],"sourceRoot":""}